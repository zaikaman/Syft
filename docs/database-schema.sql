-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ai_suggestions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  suggestion_id text NOT NULL UNIQUE CHECK (length(suggestion_id) > 0),
  vault_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  status USER-DEFINED NOT NULL DEFAULT 'pending'::suggestion_status,
  suggestion_type USER-DEFINED NOT NULL,
  title text NOT NULL,
  description text NOT NULL,
  reasoning text,
  confidence_score numeric CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  projected_apy_improvement numeric,
  projected_risk_change numeric,
  expected_return numeric,
  suggestion_data jsonb NOT NULL CHECK (jsonb_typeof(suggestion_data) = 'object'::text),
  sentiment_data jsonb,
  market_data jsonb,
  applied_at timestamp with time zone,
  dismissed_at timestamp with time zone,
  user_feedback text,
  CONSTRAINT ai_suggestions_pkey PRIMARY KEY (id),
  CONSTRAINT ai_suggestions_vault_id_fkey FOREIGN KEY (vault_id) REFERENCES public.vaults(id)
);
CREATE TABLE public.backtest_results (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  backtest_id text NOT NULL UNIQUE CHECK (length(backtest_id) > 0),
  vault_id uuid,
  vault_config jsonb NOT NULL CHECK (jsonb_typeof(vault_config) = 'object'::text),
  timeframe_start timestamp with time zone NOT NULL,
  timeframe_end timestamp with time zone NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::backtest_status,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  completed_at timestamp with time zone,
  total_return numeric,
  annualized_return numeric,
  volatility numeric,
  sharpe_ratio numeric,
  max_drawdown numeric,
  win_rate numeric,
  benchmark_return numeric,
  alpha numeric,
  beta numeric,
  results jsonb DEFAULT '{}'::jsonb,
  error_message text,
  CONSTRAINT backtest_results_pkey PRIMARY KEY (id),
  CONSTRAINT backtest_results_vault_id_fkey FOREIGN KEY (vault_id) REFERENCES public.vaults(id)
);
CREATE TABLE public.marketplace_listings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  listing_id text NOT NULL UNIQUE CHECK (length(listing_id) > 0),
  nft_id uuid NOT NULL,
  seller_wallet_address text NOT NULL CHECK (length(seller_wallet_address) > 0),
  price numeric NOT NULL CHECK (price > 0::numeric),
  price_asset text NOT NULL DEFAULT 'USDC'::text,
  status USER-DEFINED NOT NULL DEFAULT 'active'::listing_status,
  title text NOT NULL CHECK (length(title) > 0),
  description text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  expires_at timestamp with time zone,
  sold_at timestamp with time zone,
  cancelled_at timestamp with time zone,
  buyer_wallet_address text,
  sale_price numeric,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT marketplace_listings_pkey PRIMARY KEY (id),
  CONSTRAINT marketplace_listings_nft_id_fkey FOREIGN KEY (nft_id) REFERENCES public.vault_nfts(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  wallet_address text NOT NULL UNIQUE CHECK (length(wallet_address) > 0),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  profile jsonb DEFAULT '{}'::jsonb,
  network text DEFAULT 'futurenet'::text,
  last_login_at timestamp with time zone,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vault_nfts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nft_id text NOT NULL UNIQUE CHECK (length(nft_id) > 0),
  vault_id uuid NOT NULL,
  token_id text NOT NULL UNIQUE CHECK (length(token_id) > 0),
  contract_address text NOT NULL,
  ownership_percentage numeric NOT NULL CHECK (ownership_percentage > 0::numeric AND ownership_percentage <= 100::numeric),
  original_owner text NOT NULL,
  current_holder text NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  minted_at timestamp with time zone NOT NULL DEFAULT now(),
  last_transfer_at timestamp with time zone,
  total_profits_earned numeric DEFAULT 0,
  last_profit_distribution timestamp with time zone,
  CONSTRAINT vault_nfts_pkey PRIMARY KEY (id),
  CONSTRAINT vault_nfts_vault_id_fkey FOREIGN KEY (vault_id) REFERENCES public.vaults(id)
);
CREATE TABLE public.vault_performance (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vault_id uuid NOT NULL,
  timestamp timestamp with time zone NOT NULL DEFAULT now(),
  total_value numeric NOT NULL CHECK (total_value >= 0::numeric),
  share_price numeric NOT NULL CHECK (share_price > 0::numeric),
  returns_24h numeric,
  returns_7d numeric,
  returns_30d numeric,
  returns_all_time numeric,
  apy_current numeric,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT vault_performance_pkey PRIMARY KEY (id),
  CONSTRAINT vault_performance_vault_id_fkey FOREIGN KEY (vault_id) REFERENCES public.vaults(id)
);
CREATE TABLE public.vault_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vault_id uuid NOT NULL,
  user_address text NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['deposit'::text, 'withdrawal'::text])),
  amount_xlm numeric NOT NULL CHECK (amount_xlm > 0::numeric),
  amount_usd numeric NOT NULL CHECK (amount_usd > 0::numeric),
  shares numeric NOT NULL CHECK (shares > 0::numeric),
  xlm_price numeric NOT NULL CHECK (xlm_price > 0::numeric),
  share_price numeric NOT NULL CHECK (share_price > 0::numeric),
  transaction_hash text,
  block_number bigint,
  timestamp timestamp with time zone NOT NULL DEFAULT now(),
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT vault_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT vault_transactions_vault_id_fkey FOREIGN KEY (vault_id) REFERENCES public.vaults(id)
);
CREATE TABLE public.vaults (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vault_id text NOT NULL UNIQUE CHECK (length(vault_id) > 0),
  owner_wallet_address text NOT NULL,
  contract_address text UNIQUE,
  name text NOT NULL,
  description text,
  config jsonb NOT NULL DEFAULT '{}'::jsonb CHECK (jsonb_typeof(config) = 'object'::text),
  status USER-DEFINED NOT NULL DEFAULT 'draft'::vault_status,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  deployed_at timestamp with time zone,
  total_value_locked numeric DEFAULT 0,
  network text NOT NULL DEFAULT 'testnet'::text,
  CONSTRAINT vaults_pkey PRIMARY KEY (id),
  CONSTRAINT vaults_owner_wallet_address_fkey FOREIGN KEY (owner_wallet_address) REFERENCES public.users(wallet_address)
);